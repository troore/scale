/**
 * Include file for programs generated by Clef2C
 *
 * Copyright 2006 by the <a href="http: *spa-www.cs.umass.edu/">Scale Compiler Group</a>,<br>
 * <a href="http: *www.cs.umass.edu/">Department of Computer Science</a><br>
 * <a href="http: *www.umass.edu/">University of Massachusetts</a.,<br>
 * Amherst MA. 01003, USA<br>
 * All Rights Reserved.<br>
 */

#ifndef CLEF2C_H
#define CLEF2C_H

static char const Rcs_clef2c_h[] = "$Id: Clef2C.h,v 1.4 2006-11-17 20:04:30 burrill Exp $";

/**
    Define complex values.  Note this definition must have the same
    name and match the struc defined in f2c.h.
**/

typedef struct { float r, i; } complex;
typedef struct { double r, i; } doublecomplex;

/* extern declarations */

/** Intrinsics **/

extern double        _scale_CDABS(doublecomplex *expr);
extern int           _scale_abs(int arg);
extern float         _scale_absc(complex arg);
extern long          _scale_absl(long expr);
#if 0
extern long long     _scale_absL(long long expr);
#endif
extern double        _scale_absz(doublecomplex expr);
extern complex       _scale_addcc(complex expr1, complex expr2); 
extern doublecomplex _scale_addzz(doublecomplex expr1, doublecomplex expr2); 
extern double        _scale_aint(double expr);
extern void *        _scale_alloca(unsigned long size);
extern double        _scale_anint(double expr);
extern float         _scale_atan2f(float e1, float e2);
extern complex       _scale_conjgc(complex expr);
extern doublecomplex _scale_conjgz(doublecomplex expr);
extern complex       _scale_cosc(complex expr);
extern float         _scale_coshf(float e1);
extern doublecomplex _scale_cosz(doublecomplex expr);
extern complex       _scale_createcomplex(float r, float i); 
extern doublecomplex _scale_createdoublecomplex(double        r, double        i); 
extern double        _scale_ddim(double expr1, double expr2);
extern complex       _scale_divcc(complex expr1, complex expr2);
extern doublecomplex _scale_divzz(doublecomplex expr1, doublecomplex expr2);
extern double        _scale_dprod(float expr1, float expr2);
extern double        _scale_dsign(double expr1, double expr2);
extern complex       _scale_expc(complex expr);
extern int           _scale_expect(long exp, long C);
extern doublecomplex _scale_expz(doublecomplex expr);
extern int           _scale_ffs(int arg);
extern int           _scale_fputc(int c, void *st);
extern int           _scale_fputs(const char *s, void *st);
extern unsigned long _scale_fwrite(const void *ptr, unsigned long size, unsigned long nmemb, void *st);
extern int           _scale_idim(int expr1, int expr2);
extern int           _scale_imaxabs(int arg);
extern char         *_scale_index(const char *s, int c);
extern int           _scale_isign(int expr1, int expr2);
extern long          _scale_labs(long arg);
extern float         _scale_log10f(float e1);
extern complex       _scale_logc(complex expr);
extern doublecomplex _scale_logz(doublecomplex expr);
extern void         *_scale_memcpy(void *dst, const void *src, unsigned long length);
extern void         *_scale_memset(void *dst, int c, unsigned long length);
extern double        _scale_moddd(double expr1, double expr2);
extern float         _scale_modff(float expr1, float expr2);
extern int           _scale_modii(int expr1, int expr2);
extern long          _scale_modll(long expr1, long expr2);
extern void          _scale_moveWords(int size, long *src, long *dest);
extern complex       _scale_multcc(complex expr1, complex expr2); 
extern doublecomplex _scale_multzz(doublecomplex expr1, doublecomplex expr2); 
extern complex       _scale_negatec(complex expr); 
extern doublecomplex _scale_negatez(doublecomplex expr); 
extern int           _scale_nint(double expr);
extern void          _scale_pause(char *n);
extern void          _scale_pow_zi(doublecomplex *p, doublecomplex *a, int n); 	/* p = a**b  */
extern void          _scale_pow_zz(doublecomplex *r, doublecomplex *a, doublecomplex *b);
extern complex       _scale_powcc(complex e1, complex e2); 
extern complex       _scale_powci(complex a, int b); 
extern double        _scale_powdd(double x, double n);
extern double        _scale_powdi(double x, int n);
extern double        _scale_powdl(double x, long n);
extern float         _scale_powff(float e1, float e2);
extern float         _scale_powfi(float x, int n);
extern int           _scale_powii(int x, int n);
extern int           _scale_powil(int x, long n);
extern long          _scale_powli(long x, int n);
extern long          _scale_powll(long x, long n);
extern doublecomplex _scale_powzi(doublecomplex e1, int n);
extern doublecomplex _scale_powzz(doublecomplex e1, doublecomplex e2); 
extern int           _scale_printf(const char *fmt, ...);
extern int           _scale_putchar(int c);
extern int           _scale_puts(const char *s);
extern void         *_scale_return_address(unsigned int level);
extern char         *_scale_rindex(const char *s, int c);
extern char         *_scale_sassign(char *destp, char *srcp, int destl, int srcl);
extern char         *_scale_sassignc(char *destp, char src, int destl);
extern void          _scale_sassigncp(char *destp, char src, int destl, char padding);
extern void          _scale_sassignp(char *destp, char *srcp, int destl, int srcl, char padding);
extern int           _scale_scmp(char *e1, char *e2, int e1l, int e2l); 
extern int           _scale_setjmp(void *add);
extern void          _scale_longjmp(void *add, int x);
extern complex       _scale_sinc(complex expr);
extern int           _scale_sindex(char *s1, char *s2, int ls1, int ls2);
extern float         _scale_sinhf(float e1);
extern doublecomplex _scale_sinz(doublecomplex expr);
extern complex       _scale_sqrtc(complex arg);
extern doublecomplex _scale_sqrtz(doublecomplex arg);
extern void          _scale_stop(char *msg, int len);
extern char         *_scale_strcat(char *s1, const char *s2);
extern char         *_scale_strchr(const char *s, int c);
extern int           _scale_strcmp(const char *dst, const char *src);
extern char         *_scale_strcpy(char *dst, const char *src);
extern unsigned long _scale_strlen(const char *dst);
extern int           _scale_strncmp(const char *dst, const char *src, unsigned long n);
extern char         *_scale_strpbrk(const char *s1, const char *s2);
extern char         *_scale_strrchr(const char *s, int c);
extern complex       _scale_subcc(complex expr1, complex expr2); 
extern doublecomplex _scale_subzz(doublecomplex expr1, doublecomplex expr2); 
extern float         _scale_tanhf(float e1);
extern void          _scale_trap(void);
extern void          _scale_z_div(doublecomplex *c, doublecomplex *a, doublecomplex *b);

/* Standard C library routines used in Clef2C */

extern double fabs(double);
extern double fmod(double, double);

#endif /* CLEF2C_H */
