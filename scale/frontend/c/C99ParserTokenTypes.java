// $ANTLR 2.7.4: "c99.g" -> "C99Lexer.java"$

package scale.frontend.c;

public interface C99ParserTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int KEYWORD_auto = 4;
	int KEYWORD_break = 5;
	int KEYWORD_case = 6;
	int KEYWORD_char = 7;
	int KEYWORD_const = 8;
	int KEYWORD___const = 9;
	int KEYWORD_continue = 10;
	int KEYWORD_default = 11;
	int KEYWORD_do = 12;
	int KEYWORD_double = 13;
	int KEYWORD_else = 14;
	int KEYWORD_enum = 15;
	int KEYWORD_extern = 16;
	int KEYWORD_float = 17;
	int KEYWORD_for = 18;
	int KEYWORD_goto = 19;
	int KEYWORD_if = 20;
	int KEYWORD_inline = 21;
	int KEYWORD_int = 22;
	int KEYWORD_long = 23;
	int KEYWORD_register = 24;
	int KEYWORD_restrict = 25;
	int KEYWORD_return = 26;
	int KEYWORD_short = 27;
	int KEYWORD_signed = 28;
	int KEYWORD___signed__ = 29;
	int KEYWORD_sizeof = 30;
	int KEYWORD_static = 31;
	int KEYWORD_struct = 32;
	int KEYWORD_switch = 33;
	int KEYWORD_typedef = 34;
	int KEYWORD_label = 35;
	int KEYWORD_typeof = 36;
	int KEYWORD_union = 37;
	int KEYWORD_unsigned = 38;
	int KEYWORD_void = 39;
	int KEYWORD_volatile = 40;
	int KEYWORD__volatile = 41;
	int KEYWORD_while = 42;
	int KEYWORD__Bool = 43;
	int KEYWORD__Complex = 44;
	int KEYWORD__Imaginary = 45;
	int KEYWORD_Extension = 46;
	int KEYWORD_alignof = 47;
	int KEYWORD__inline__ = 48;
	int KEYWORD__inline = 49;
	int KEYWORD_va_arg = 50;
	int KEYWORD_builtin_va_arg = 51;
	int KEYWORD_builtin_offsetof = 52;
	int KEYWORD_clone = 53;
	int Identifier = 54;
	int HexDoubleValue = 55;
	int HexFloatValue = 56;
	int HexLongDoubleValue = 57;
	int HexUnsignedIntValue = 58;
	int HexUnsignedLongIntValue = 59;
	int HexUnsignedLongLongIntValue = 60;
	int HexIntValue = 61;
	int HexLongIntValue = 62;
	int HexLongLongIntValue = 63;
	int DoubleValue = 64;
	int FloatValue = 65;
	int LongDoubleValue = 66;
	int UnsignedIntValue = 67;
	int UnsignedLongIntValue = 68;
	int UnsignedLongLongIntValue = 69;
	int IntValue = 70;
	int LongIntValue = 71;
	int LongLongIntValue = 72;
	int CharacterConstant = 73;
	int WideCharacterConstant = 74;
	int StringLit = 75;
	int WideStringLiteral = 76;
	int LParen = 77;
	int LBrace = 78;
	int RParen = 79;
	int Dot = 80;
	int Select = 81;
	int LBracket = 82;
	int RBracket = 83;
	int Dec = 84;
	int Inc = 85;
	int Comma = 86;
	int And = 87;
	int Mult = 88;
	int Plus = 89;
	int Sub = 90;
	int Comp = 91;
	int Not = 92;
	int Slash = 93;
	int Mod = 94;
	int LShift = 95;
	int RShift = 96;
	int LAngle = 97;
	int RAngle = 98;
	int LEqual = 99;
	int GEqual = 100;
	int Equal = 101;
	int NEqual = 102;
	int Xor = 103;
	int Or = 104;
	int AndCond = 105;
	int OrCond = 106;
	int QMark = 107;
	int Colon = 108;
	int Assign = 109;
	int MultAssign = 110;
	int SlashAssign = 111;
	int ModAssign = 112;
	int PlusAssign = 113;
	int SubAssign = 114;
	int AndAssign = 115;
	int OrAssign = 116;
	int XorAssign = 117;
	int LSAssign = 118;
	int RSAssign = 119;
	int Semi = 120;
	int LITERAL___restrict = 121;
	int Attributes = 122;
	int LITERAL___asm__ = 123;
	int LITERAL_asm = 124;
	int LITERAL___asm = 125;
	int RBrace = 126;
	int Varargs = 127;
	int Pragma = 128;
	int PPLine = 129;
	int StdArg = 130;
	int PPError = 131;
	int PPWarning = 132;
	int WS = 133;
	int OctalDigit = 134;
	int OctalConstant = 135;
	int NonzeroDigit = 136;
	int HexadecimalDigit = 137;
	int IntegerSuffix = 138;
	int UnsignedSuffix = 139;
	int UnsignedLongSuffix = 140;
	int UnsignedLongLongSuffix = 141;
	int LongUnsignedSuffix = 142;
	int LongLongUnsignedSuffix = 143;
	int LongSuffix = 144;
	int LongLongSuffix = 145;
	int ExponentPart = 146;
	int Exponent = 147;
	int DigitSequence = 148;
	int BinaryExponentPart = 149;
	int FloatingSuffix = 150;
	int Constant = 151;
	int CCharSequence = 152;
	int CChar = 153;
	int EscapeSequence = 154;
	int SChar = 155;
	int HexPrefix = 156;
	int Hatch = 157;
	int DHatch = 158;
	int LColon = 159;
	int RColon = 160;
	int LMod = 161;
	int RMod = 162;
	int MColon = 163;
	int MCMColon = 164;
	int LineNumber = 165;
	int Text1 = 166;
	int Text2 = 167;
	int Att = 168;
	int IdentifierNondigit = 169;
	int Nondigit = 170;
	int Digit = 171;
	int UniversalCharacterName = 172;
	int HexQuad = 173;
}
